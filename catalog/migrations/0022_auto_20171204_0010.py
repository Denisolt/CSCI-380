# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2017-12-04 00:10
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('catalog', '0021_auto_20171201_1940'),
    ]

    operations = [
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the College (e.g. NYIT, PACE, etc)', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CourseID', models.CharField(help_text='Enter the CourseID (e.g. CSCI 360)', max_length=200)),
                ('name', models.CharField(help_text='Enter the CourseID (e.g. Artificial Intelligence)', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Enter the Department's name (e.g. Computer Science", max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the Exam name (e.g. Midterm exam 1)', max_length=200)),
                ('ExamDate', models.DateField(blank=True, null=True)),
                ('InstrucorName', models.CharField(help_text='Enter Instructors name (e.g. Sertac Artan)', max_length=200)),
                ('InstructorsEmail', models.EmailField(help_text='Enter Instructors email (e.g. dshakhbu@nyit.edu', max_length=200)),
                ('semester', models.CharField(blank=True, choices=[('f', 'Fall'), ('s', 'Spring'), ('l', 'Summer'), ('w', 'Winter')], default='f', help_text='Semester', max_length=1)),
                ('Year', models.CharField(help_text='Enter the Year (e.g. 2017)', max_length=200)),
                ('Course', models.ManyToManyField(help_text='Select a Course for this Exam', to='catalog.Course')),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Enter School's name (e.g. School of Engineering)", max_length=200)),
                ('CollegeName', models.ManyToManyField(help_text='Select a College for this School', to='catalog.College')),
            ],
        ),
        migrations.RemoveField(
            model_name='book',
            name='author',
        ),
        migrations.RemoveField(
            model_name='book',
            name='genre',
        ),
        migrations.RemoveField(
            model_name='book',
            name='language',
        ),
        migrations.RemoveField(
            model_name='bookinstance',
            name='book',
        ),
        migrations.RemoveField(
            model_name='bookinstance',
            name='borrower',
        ),
        migrations.DeleteModel(
            name='Author',
        ),
        migrations.DeleteModel(
            name='Book',
        ),
        migrations.DeleteModel(
            name='BookInstance',
        ),
        migrations.DeleteModel(
            name='Genre',
        ),
        migrations.DeleteModel(
            name='Language',
        ),
        migrations.AddField(
            model_name='department',
            name='SchoolName',
            field=models.ManyToManyField(help_text='Select a School for this Department', to='catalog.School'),
        ),
        migrations.AddField(
            model_name='course',
            name='DepartmentName',
            field=models.ManyToManyField(help_text='Select a Department for this Course', to='catalog.Department'),
        ),
    ]
